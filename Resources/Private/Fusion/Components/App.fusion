prototype(Shel.ContentRepository.Debugger:Component.App) < prototype(Neos.Fusion:Component) {
    appData = Neos.Fusion:DataStructure {
        csrfToken = ${Security.csrfToken()}
        endpoints = Neos.Fusion:DataStructure {
            getNodeTypeDefinitions = Neos.Fusion:UriBuilder {
                action = 'getNodeTypeDefinitions'
                format = 'json'
            }
            getNodeTypeUsage = Neos.Fusion:UriBuilder {
                action = 'getNodeTypeUsage'
                format = 'json'
                arguments.nodeTypeName = '${nodeTypeName}'
            }
            evaluateEelExpression = Neos.Fusion:UriBuilder {
                controller = 'Repl'
                action = 'evaluateEelExpression'
                format = 'json'
                arguments.expression = '${expression}'
            }
            getContextData = Neos.Fusion:UriBuilder {
                controller = 'Repl'
                action = 'getContextData'
                format = 'json'
            }
            flushCache = Neos.Fusion:UriBuilder {
                controller = 'Repl'
                action = 'flushCache'
                format = 'json'
                arguments.cacheIdentifier = '${cacheIdentifier}'
            }
        }
    }

    renderer = Neos.Fusion:Tag {
        attributes {
            id = "graphAppContainer"
            data-app = ${Json.stringify(props.appData)}
            style = "height: calc(100vh - 200px); overflow: hidden;"
        }
    }
}
